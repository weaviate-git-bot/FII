import 'dart:async';
import 'dart:math';
import 'dart:ui' as ui;
import 'package:flutter/material.dart';
import 'package:path_drawing/path_drawing.dart';

class CategoryImagePainter extends CustomPainter {
  Color color = Colors.white;
  String category = '';
  final Map<String, String> _iconCateg = {
    'Grocery':
        'M12.16 28.24c-0.64 0-1.2-0.080-1.64-0.28-0.48 0.2-1.040 0.28-1.64 0.28-1.72 0-3.6-0.72-5.080-2-1.88-1.6-3.12-4.040-3.64-7.040-0.52-3.12 0.4-4.96 1.24-5.92 1.080-1.24 2.64-1.96 4.48-1.96 1.76 0 3.48 0.68 4.64 1.8 1.16-1.12 2.88-1.8 4.64-1.8 1.84 0 3.44 0.68 4.48 1.96 0.84 1 1.72 2.84 1.24 5.92-0.48 3-1.76 5.44-3.64 7.040-1.48 1.24-3.32 2-5.080 2zM10.52 26.16c0.16 0 0.32 0.040 0.44 0.12 0.24 0.16 0.68 0.24 1.2 0.24 2 0 6.040-1.6 7.040-7.68 0.32-1.96 0.040-3.52-0.84-4.56-0.76-0.88-1.88-1.36-3.2-1.36-1.64 0-3.2 0.72-3.96 1.88-0.16 0.24-0.4 0.36-0.68 0.36v0c-0.28 0-0.56-0.16-0.68-0.36-0.76-1.12-2.32-1.88-3.96-1.88-1.32 0-2.48 0.48-3.2 1.36-0.88 1.040-1.16 2.6-0.84 4.56 0.44 2.64 2.48 7.68 7.040 7.68 0.52 0 0.96-0.080 1.2-0.24 0.12-0.080 0.28-0.12 0.44-0.12zM7.88 9.92c-0.56 0-1.96-0.12-2.92-1.4-1.12-1.48-1-3.72-0.96-4 0-0.24 0.12-0.48 0.32-0.6 0.2-0.16 0.44-0.2 0.68-0.16s2.44 0.52 3.56 2.040c1.24 1.68 0.44 3.52 0.4 3.6-0.12 0.24-0.36 0.44-0.64 0.48-0.040 0.040-0.2 0.040-0.44 0.040zM5.68 5.76c0.080 0.6 0.24 1.28 0.6 1.76s0.88 0.64 1.24 0.72c0.040-0.36 0.040-0.92-0.32-1.4-0.36-0.52-0.96-0.84-1.52-1.080zM10.52 11.36c-0.080 0-0.16 0-0.24-0.040-0.44-0.12-0.68-0.6-0.56-1.040l1.2-3.96c0.12-0.44 0.6-0.68 1.040-0.56s0.68 0.6 0.56 1.040l-1.2 3.96c-0.12 0.36-0.44 0.6-0.8 0.6z',
    'Clothing':
        'M3 7L6 4H9C9 4.39397 9.0776 4.78407 9.22836 5.14805C9.37913 5.51203 9.6001 5.84274 9.87868 6.12132C10.1573 6.3999 10.488 6.62087 10.8519 6.77164C11.2159 6.9224 11.606 7 12 7C12.394 7 12.7841 6.9224 13.1481 6.77164C13.512 6.62087 13.8427 6.3999 14.1213 6.12132C14.3999 5.84274 14.6209 5.51203 14.7716 5.14805C14.9224 4.78407 15 4.39397 15 4H18L21 7L20.5 12L18 10.5V20H6V10.5L3.5 12L3 7Z',
    'Electronics':
        'M338,7002 C338,7001.448 337.552,7001 337,7001 L331,7001 C330.448,7001 330,7001.448 330,7002 L330,7016 C330,7016.552 330.448,7017 331,7017 L337,7017 C337.552,7017 338,7016.552 338,7016 L338,7002 Z M340,7001 L340,7017 C340,7018.105 339.105,7019 338,7019 L330,7019 C328.895,7019 328,7018.105 328,7017 L328,7001 C328,6999.895 328.895,6999 330,6999 L338,6999 C339.105,6999 340,6999.895 340,7001 L340,7001 Z M335.021,7014 C335.021,7014.552 334.573,7015 334.021,7015 C333.469,7015 333.021,7014.552 333.021,7014 C333.021,7013.448 333.469,7013 334.021,7013 C334.573,7013 335.021,7013.448 335.021,7014 L335.021,7014 Z',
    'Home':
        'M4 11.4522V16.8002C4 17.9203 4 18.4807 4.21799 18.9086C4.40973 19.2849 4.71547 19.5906 5.0918 19.7823C5.5192 20.0001 6.07899 20.0001 7.19691 20.0001H16.8031C17.921 20.0001 18.48 20.0001 18.9074 19.7823C19.2837 19.5906 19.5905 19.2849 19.7822 18.9086C20 18.4811 20 17.9216 20 16.8037V11.4522C20 10.9179 19.9995 10.6506 19.9346 10.4019C19.877 10.1816 19.7825 9.97307 19.6546 9.78464C19.5102 9.57201 19.3096 9.39569 18.9074 9.04383L14.1074 4.84383C13.3608 4.19054 12.9875 3.86406 12.5674 3.73982C12.1972 3.63035 11.8026 3.63035 11.4324 3.73982C11.0126 3.86397 10.6398 4.19014 9.89436 4.84244L5.09277 9.04383C4.69064 9.39569 4.49004 9.57201 4.3457 9.78464C4.21779 9.97307 4.12255 10.1816 4.06497 10.4019C4 10.6506 4 10.9179 4 11.4522Z',
    'Other':
        'M9.11241 7.82201C9.44756 6.83666 10.5551 6 12 6C13.7865 6 15 7.24054 15 8.5C15 9.75946 13.7865 11 12 11C11.4477 11 11 11.4477 11 12L11 14C11 14.5523 11.4477 15 12 15C12.5523 15 13 14.5523 13 14L13 12.9082C15.203 12.5001 17 10.7706 17 8.5C17 5.89347 14.6319 4 12 4C9.82097 4 7.86728 5.27185 7.21894 7.17799C7.0411 7.70085 7.3208 8.26889 7.84366 8.44673C8.36653 8.62458 8.93457 8.34488 9.11241 7.82201ZM12 20C12.8285 20 13.5 19.3284 13.5 18.5C13.5 17.6716 12.8285 17 12 17C11.1716 17 10.5 17.6716 10.5 18.5C10.5 19.3284 11.1716 20 12 20Z'
  };

  CategoryImagePainter({
    required this.color,
    required this.category,
  });

  @override
  void paint(Canvas canvas, Size size) {
    var paint = Paint()
      ..color = color
      ..strokeWidth = 2.0
      ..strokeCap = StrokeCap.round
      ..style = PaintingStyle.fill;

    var imagePaint = Paint()
      ..color = color.computeLuminance() > 0.5 ? Colors.black : Colors.white;
    var center = size.center(Offset.zero);
    var path = parseSvgPathData(_iconCateg[category]!);
    var iconBounds = path.getBounds();
    var dx = center.dx - iconBounds.center.dx;
    var dy = center.dy - iconBounds.center.dy;
    var iconSvg = Path()..addPath(path, Offset(dx, dy));
    canvas.drawCircle(size.center(Offset.zero), size.width / 3.0, paint);
    canvas.drawPath(iconSvg, imagePaint);
  }

  @override
  bool shouldRepaint(CategoryImagePainter oldDelegate) {
    return color != oldDelegate.color;
  }
}
